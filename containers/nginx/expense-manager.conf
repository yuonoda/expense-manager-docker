map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}
server {

    listen 80 ;
    #listen 443 ssl http2;

    server_name localhost local-em-api;

    charset UTF-8;

    #ssl_certificate /etc/letsencrypt/live/lhp.rainmaker.app/cert.pem;
    #ssl_certificate_key /etc/letsencrypt/live/lhp.rainmaker.app/privkey.pem;

    access_log  /var/log/nginx/lighthouse.access.log;
    error_log   /var/log/nginx/lighthouse.error.log info;

    # 隠しファイルを返さない
    # let's Encryptは、.well-knownにアクセスされる
    location ~ /\.(?!well-known).* {
        deny all;
    }

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location / {
        # preflightに対するレスポンス指定
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE';
            add_header Access-Control-Allow-Headers 'Origin, Authorization, Accept, Content-Type';
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;

            return 204;
         }

        expires $expires;

        add_header Access-Control-Allow-Origin '*' always;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://em-node:3000; # Node.js のアドレスはここで設定してください
    }

    if (!-d $request_filename) {
            rewrite     ^/(.+)/$ /$1 permanent;
    }

}